pipeline {
    agent any

    parameters {
        string(defaultValue: ['dev1', 'dev2', 'dev3'],name: 'DEV_BRANCH')
    }

    environment {
        IMAGE_PREFIX = "xyz673"
        DEPLOY_YAML = "deployment.yaml"
       
    }

    stages {

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub',
                                                  usernameVariable: 'DOCKER_USER',
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    '''
                }
            }
        }

        stage("Build and Push Docker Image") {
            steps {
                script {
                    def dockerfile = ''
                    def imageName = ''
                    if (params.DEV_BRANCH == 'dev1') {
                        dockerfile = 'Dockerfile'
                        imageName = 'dev1-app'
                    } else if (params.DEV_BRANCH == 'dev2') {
                        dockerfile = 'web1.Dockerfile'
                        imageName = 'dev2-app'
                    } else if (params.DEV_BRANCH == 'dev3') {
                        dockerfile = 'web2.Dockerfile'
                        imageName = 'dev3-app'
                    }

                    env.IMAGE_NAME = imageName
                    env.DOCKERFILE_NAME = dockerfile

                    sh """
                    docker build -f ${dockerfile} -t ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER} .
                    docker push ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER}
                    sed -i 's|image: .*|image: ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER}|' ${DEPLOY_YAML}
                    """
                }
            }
        }

        

        stage('Push to Branch') {
    steps {
        withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
    script {
        sh """
            rm -rf git-temp
            git clone https://ganesh-redy:${GITHUB_TOKEN}@github.com/ganesh-redy/gitops-test2.git git-temp
            cd git-temp
            git checkout ${params.DEV_BRANCH} || git checkout -b ${params.DEV_BRANCH}
            cp ../${DEPLOY_YAML} .
            cp ../${env.DOCKERFILE_NAME} .
            
            git add ${DEPLOY_YAML}
            git commit -m "Update from pipeline build ${BUILD_NUMBER}" 
            git push https://ganesh-redy:${GITHUB_TOKEN}@github.com/ganesh-redy/test2-gitops.gitt ${params.DEV_BRANCH}
        """
    }
}


    }
}

    }
}
